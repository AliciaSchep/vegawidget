% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shiny-message.R
\name{shiny-message}
\alias{shiny-message}
\alias{vw_shiny_msg_callView}
\alias{vw_shiny_msg_changeData}
\alias{vw_shiny_msg_addSignalListener}
\alias{vw_shiny_msg_addEventListener}
\title{Shiny-message functions}
\usage{
vw_shiny_msg_callView(outputId, fn, params, run)

vw_shiny_msg_changeData(outputId, name, data_insert, data_remove, run)

vw_shiny_msg_addSignalListener(outputId, name, handler, inputId)

vw_shiny_msg_addEventListener(outputId, event, handler)
}
\arguments{
\item{outputId}{\code{character}, shiny \code{outputId} for the vegawidget}

\item{fn}{\code{character}, name of vega-view function to call}

\item{params}{\code{list}, list of parameters which which to call \code{fn}}

\item{run}{\code{logical}, indicates if the view should be run immediately,
default is TRUE}

\item{name}{\code{character} name of the signal or dataset, as defined
in the vegaspec}

\item{data_insert}{\code{data.frame}, data to be inserted into
the named dataset}

\item{data_remove}{\code{data.frame}, \code{character}, or \code{logical},
data to be removed - if \code{logical}, \code{TRUE} indicates to remove
all the previous data, \code{FALSE} indicates to remove no previous
data - if \code{character} this will be the body of a JavaScript function
with a single argument, \code{data.remove}, this will be a predicate
function, returning a boolean.}

\item{handler}{\code{character}, either the name of a handler in the
Vegawidget JavaScript object or a the body of a handler function
for the given listener}

\item{inputId}{\code{character}, shiny \code{inputId} where the value returned by
the handler will be stored}

\item{event}{\code{character}, name of the event to monitor, e.g. \code{"click"}}
}
\value{
\code{invisible(NULL)}, called for side-effects
}
\description{
Use these functions to send messages from Shiny to JavaScript,
using the vegawidget JavaScript API.
}
\details{
These functions must be called from within a reactive enviromnent. Because
their purpose is to cause a side-effect (changing the view of a chart), they
should be called from within \code{\link[shiny:observe]{shiny::observe()}} functions, or equivalent.

\describe{
\item{\code{vw_shiny_msg_callView}}{this is a multipurpose call}
\item{\code{vw_shiny_msg_changeData}}{}
\item{\code{vw_shiny_msg_addSignalListener}}{}
\item{\code{vw_shiny_msg_addEventListener}}{}
}
}
\keyword{internal}
