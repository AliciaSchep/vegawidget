% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shiny-setters.R
\name{shiny-setters}
\alias{shiny-setters}
\alias{vw_shiny_set_signal}
\alias{vw_shiny_set_data}
\title{Set a signal using a reactive expression}
\usage{
vw_shiny_set_signal(expr, output_id, name, run = TRUE)

vw_shiny_set_data(expr, output_id, name, use_cache = TRUE, run = TRUE)
}
\arguments{
\item{expr}{reactive expression, i.e. \code{input$slider} or \code{dataset()}}

\item{output_id}{\code{character}, \code{outputId} for the vegawidget}

\item{name}{\code{character}, name of the signal or dataset, as defined in the
vegaspec}

\item{run}{\code{logical} indicates if the chart is to be run immediately}

\item{use_cache}{\code{logical}, for setting data, indicates to
to send Vega only the \emph{changes} in the dataset, rather
than making a hard reset of the dataset}
}
\value{
\code{\link[shiny:observeEvent]{shiny::observeEvent()}} that responds to changes in \code{expr}
}
\description{
There are two ways to change a Vega chart using shiny; by setting
a signal or by setting a dataset. In either case, you will need to
have named your signal or your dataset in the vegaspec.
}
\details{
These functions act as observers; use them as you would use
\code{\link[shiny:observe]{shiny::observe()}} or \code{\link[shiny:observeEvent]{shiny::observeEvent()}}.
}
