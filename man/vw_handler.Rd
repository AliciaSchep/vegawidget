% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/javascript-handlers.R
\name{vw_handler}
\alias{vw_handler}
\alias{vw_handler_list}
\title{JavaScript Handlers}
\usage{
vw_handler(body)

vw_handler_list(type = NULL)
}
\arguments{
\item{body}{\code{character}, name of the body of the handler;
currently-available bodies depend on the \code{type}}

\item{type}{\code{character}, name of the type of handler;
currently-available types are \code{"signal"} and \code{"event"}}
}
\value{
\describe{
\item{\code{vw_handler()}}{a function that, given a \code{type},
returns a JavaScript handler-body}
\item{\code{vw_handler_list()}}{a list of handlers, organized by \code{type}
and \code{body}, prints to a friendly format}
}
}
\description{
A Vega listener needs a handler-function to call when the object
being listened-to changes. These functions help you to build
such handler-functions in R. The \code{vw_handler()} function is used
by the \link{shiny-getters} to define the value that is returned
through a reactive expression. You can use the \code{vw_handler_list()}
function to discover what predifined handlers are available.
}
\examples{
  \dontrun{
    # called from a within a shiny server-function
    rct_cyl <- vw_shiny_get_signal(
      "chart",
      name = "cyl",
      handler = vw_handler("value")
    )}
  vw_handler_list()
  vw_handler_list("signal")
}
\seealso{
\code{\link[=vw_shiny_get_signal]{vw_shiny_get_signal()}}, \code{\link[=vw_shiny_get_event]{vw_shiny_get_event()}},
vega-view: \href{https://github.com/vega/vega-view#view_addSignalListener}{addSignalListener()},
\href{https://github.com/vega/vega-view#view_addEventListener}{addEventListener()}
}
